% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/VisualSHIELDServer.R
\name{VisualSHIELDServer}
\alias{VisualSHIELDServer}
\title{Load main VisualSHIELD Server component
this function generates the Server counterpart for the UI with the matching id parameter.}
\usage{
VisualSHIELDServer(
  id,
  servers,
  LOG_FILE = "VisualSHIELD.log",
  glm_max_iterations = 30
)
}
\arguments{
\item{id}{The id of the corresponding VisualSHIELD UI.}

\item{servers}{A R list with user information (name/email)and a list of opal/dbNP servers the user can connect to.}

\item{LOG_FILE}{The path to the file where user activity will be logged}

\item{glm_max_iterations}{The maximum number of iterations allowed for the federated analysis}
}
\description{
Load main VisualSHIELD Server component
this function generates the Server counterpart for the UI with the matching id parameter.
}
\examples{
\dontrun{
shinyServer(function(input, output, session) {
 # login information, list of servers and user name
 login <- reactive({
   if( is.null(input$load) || !input$load )
     return(NULL)

   isolate(
     list(username="tomasoni", email="tomasoni@cosbi.eu",
               servers=list(
                 # server 1
                 list(
                         opal_server = list(id = "1",
                                            name = "DEMO",
                                            url = input$custom_server,
                                            username = "administrator",
                                            password = "password",
                                            certificate = NULL,
                                            private_key = NULL),
                         # dbNP server whose studies will be migrated 
                         # to the opal server defined above
                         dashin_server = NULL 
                 )
                 #, ... server n
               )
             )
     )
   })

 VisualSHIELDServer("VisualSHIELD", servers=login)

  output$server <- renderUI({
    textInput("custom_server", 
              label="Server to connect to:", value="", 
              placeholder = "https://opal-demo.obiba.org")
  })
})
}
}
